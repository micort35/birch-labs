{"version":3,"sources":["components/layout/Header.tsx","components/layout/Search.tsx","components/layout/ListItem.tsx","components/Pokemon.tsx","components/Team.tsx","App.tsx","index.tsx"],"names":["Header","className","Search","onSubmit","e","props","type","name","this","validSearch","placeholder","value","query","onChange","Component","gen_id","Math","random","toString","substr","ListItem","items","map","item","i","key","classifier","Pokemon","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","Object","values","poke","stats","options","scales","xAxes","display","ticks","suggestedMin","min","editing","src","sprites","active","alt","onClick","toggleShiny","types","typify","moves","ability","nature","releasePoke","capturePoke","state","movePoke","editPoke","deletePoke","parsePoke","response","regular","front_default","shiny","front_shiny","HP","base_stat","Atk","Def","SpA","SpD","Spe","swapElements","arr","e1","e2","tmp","Team","team","onType","setState","currentTarget","onTypeID","id","property","index","memNum","findIndex","pokemon","undefined","filter","Pokedex","encounterPoke","preventDefault","addPoke","length","includes","getPokemonByName","toLowerCase","then","catch","direction","validateAbility","valid","abilities","replace","edits","searchPoke","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b1fb8544.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"banner raisin-bg text-center w-100\">\r\n            <h1>Birch Labs</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react';\r\n\r\ninterface SearchProps {\r\n    query: string,\r\n    validSearch: boolean,\r\n    searchPoke: Function,\r\n    onSubmit: Function,\r\n    onChange: Function\r\n}\r\n\r\nclass Search extends Component<SearchProps> {\r\n    render () { \r\n        return (\r\n            <form onSubmit={(e) => this.props.onSubmit(e)}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"query\"\r\n                    className={\"search box-rounded white-bg center text-center block w-25 mb-1\" + (this.props.validSearch ? \"\" : \" error\")} \r\n                    placeholder=\"Enter a PokÃ©mon\"\r\n                    value={this.props.query}\r\n                    onChange={(e) => this.props.onChange(e)}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"box-rounded box-md crimson-l-bg center text-center block w-15 mb-1\">\r\n                    Encounter!\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import React from 'react';\r\n\r\nfunction ListItem(props: any) {\r\n    return (\r\n        <ul>\r\n            {props.items.map((item: string, i: number) =>\r\n                <li key={gen_id()} className={props.classifier(item)}>{item}</li>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst gen_id = () => Math.random().toString(36).substr(2, 9);\r\n\r\nexport default ListItem","import React, { Component } from \"react\";\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport { PokemonData } from \"../types/types\";\r\nimport ListItem from './layout/ListItem';\r\n\r\ninterface PokemonTypes {\r\n    poke: PokemonData,\r\n    editing: boolean,\r\n    movePoke: Function,\r\n    editPoke: Function,\r\n    deletePoke: Function,\r\n    toggleShiny: Function,\r\n    releasePoke: Function,\r\n    capturePoke: Function,\r\n    onChange: Function\r\n}\r\n\r\nclass Pokemon extends Component<PokemonTypes> {\r\n    readonly data = {\r\n        labels: ['HP', 'Atk', 'Def', 'SpA', 'SpD', 'Spe'],\r\n        datasets: [\r\n          {\r\n            label: 'Base Stats',\r\n            backgroundColor: 'rgba(255,99,132,0.2)',\r\n            borderColor: 'rgba(255,99,132,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n            hoverBorderColor: 'rgba(255,99,132,1)',\r\n            data: Object.values(this.props.poke.stats)\r\n          }\r\n        ]\r\n    };\r\n\r\n    readonly options = {\r\n        scales: {\r\n            xAxes: [{\r\n                display: true,\r\n                ticks: {\r\n                    suggestedMin: Math.min(...this.data.datasets[0].data) - 5\r\n                }\r\n            }]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                this.props.editing ? (\r\n                    <div className=\"text-center\">\r\n                        <div className=\"card white-bg center flex-center w-25 mt-1 mb-1\">\r\n                            <div className=\"card-poke text-center\">\r\n                                <p className=\"p-name i-block cap\">{this.props.poke.name}</p>\r\n                                <img \r\n                                    src={this.props.poke.sprites.active}\r\n                                    alt=\"PokÃ©mon's sprite\"\r\n                                    className=\"sprite\"\r\n                                    onClick={() => this.props.toggleShiny(this.props.poke.name)}\r\n                                />\r\n                                <ListItem items={this.props.poke.types} classifier={typify} />\r\n                            </div>\r\n                            <div className=\"card-moves\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"move1\"\r\n                                    placeholder=\"Move 1\"\r\n                                    className=\"box-rounded box-md text-center w-95 mt-05\"\r\n                                    value={this.props.poke.moves[0]}\r\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.props.onChange(e, this.props.poke.name, 'moves', 0)}\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"move2\"\r\n                                    placeholder=\"Move 2\"\r\n                                    className=\"box-rounded box-md text-center w-95 mt-05\"\r\n                                    value={this.props.poke.moves[1]}\r\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.props.onChange(e, this.props.poke.name, 'moves', 1)}\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"move3\"\r\n                                    placeholder=\"Move 3\"\r\n                                    className=\"box-rounded box-md text-center w-95 mt-05\"\r\n                                    value={this.props.poke.moves[2]}\r\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.props.onChange(e, this.props.poke.name, 'moves', 2)}\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"move4\"\r\n                                    placeholder=\"Move 4\"\r\n                                    className=\"box-rounded box-md text-center w-95 mt-05\"\r\n                                    value={this.props.poke.moves[3]}\r\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.props.onChange(e, this.props.poke.name, 'moves', 3)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"card-modifiers flex-center\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"ability\"\r\n                                    placeholder=\"Ability\"\r\n                                    className=\"box-rounded box-md text-center w-30 mx-025\"\r\n                                    value={this.props.poke.ability}\r\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.props.onChange(e, this.props.poke.name, 'ability')}\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"nature\"\r\n                                    placeholder=\"Nature\"\r\n                                    className=\"box-rounded box-md text-center w-30 mx-025\"\r\n                                    value={this.props.poke.nature}\r\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.props.onChange(e, this.props.poke.name, 'nature')}\r\n                                />\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"item\"\r\n                                    placeholder=\"Item\"\r\n                                    className=\"box-rounded box-md text-center w-30 mx-025\"\r\n                                    value={this.props.poke.item}\r\n                                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.props.onChange(e, this.props.poke.name, 'item')}\r\n                                />\r\n                            </div>\r\n                            <div className=\"card-stats\">\r\n                                <HorizontalBar data={this.data} options={this.options} />\r\n                            </div>\r\n                        </div>\r\n                        <form className=\"i-block w-10 mx-1 mb-1\" onSubmit={(e) => this.props.releasePoke(e, this.props.poke.name)}>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"box-rounded box-md negative-bg w-100\">\r\n                                Release\r\n                            </button>\r\n                        </form>\r\n                        <form className=\"i-block w-10 mx-1 mb-1\" onSubmit={(e) => this.props.capturePoke(e, this.props.poke.name, this.state)}>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"box-rounded box-md grass-bg w-100\">\r\n                                Capture!\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"center flex-center w-25 separator\">\r\n                        <img src={this.props.poke.sprites.active} alt=\"PokÃ©mon's sprite\" className=\"sprite\"/>\r\n                        <p className=\"poke-name i-block text-center cap\">{this.props.poke.name}</p>\r\n                        <form className=\"flex-center\">\r\n                            <div className=\"poke-move i-block\">\r\n                                <button type=\"button\" onClick={() => this.props.movePoke(this.props.poke.name, -1)}>\r\n                                    <i className=\"material-icons\">arrow_drop_up</i>\r\n                                </button>\r\n                                <button type=\"button\" onClick={() => this.props.movePoke(this.props.poke.name, 1)}>\r\n                                    <i className=\"material-icons\">arrow_drop_down</i>\r\n                                </button>\r\n                            </div>\r\n                            <button type=\"button\" onClick={() => this.props.editPoke(this.props.poke.name)}>\r\n                                <i className=\"material-icons\">edit</i>\r\n                            </button>\r\n                            <button type=\"button\" onClick={() => this.props.deletePoke(this.props.poke.name)}>\r\n                                <i className=\"material-icons\">delete</i>\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </> \r\n        )\r\n    }\r\n}\r\n\r\nconst typify = (type: string) => 'box-rounded box-md i-block w-45 mx-025 font-sm upper ' + type\r\n\r\nexport default Pokemon","import React, { Component } from 'react';\r\nimport { Pokedex } from 'pokeapi-js-wrapper';\r\nimport { PokemonData } from '../types/types';\r\nimport Search from './layout/Search';\r\nimport Pokemon from './Pokemon';\r\n\r\nclass Team extends Component {\r\n    state = {\r\n        query: '',\r\n        validSearch: true,\r\n        team: [],\r\n        editing: ''\r\n    }\r\n\r\n    onType = (e: React.ChangeEvent<HTMLInputElement>) => this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n\r\n    onTypeID = (e: React.ChangeEvent<HTMLInputElement>, id: string, property: string, index?: number) => {\r\n        const memNum = this.state.team.findIndex((poke: PokemonData) => poke.name === id);\r\n        let pokemon = this.state.team[memNum] as PokemonData;\r\n        if (index !== undefined) {\r\n            let properties = pokemon[property] as Array<String>;\r\n            properties[index] = e.currentTarget.value;\r\n        } else {\r\n            pokemon[property] = e.currentTarget.value;\r\n        }\r\n\r\n        // Needs changing, will mess up order if editing < nth member, inefficient\r\n        // immutability-helper\r\n        this.setState({\r\n            team: [...this.state.team.filter((poke: PokemonData) => poke.name !== id), pokemon]\r\n        });\r\n    }\r\n\r\n    // Create PokeAPI client\r\n    readonly Pokedex = new Pokedex();\r\n\r\n    encounterPoke = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        this.addPoke(this.state.query);\r\n        this.setState({ query: '' });\r\n    }\r\n\r\n    addPoke = (name: string) => {\r\n        // Check for team max and duplicates\r\n        if (this.state.team.length === 6 || this.state.team.map((poke: PokemonData) => poke.name).includes(name)){\r\n            this.setState({ validSearch: false });\r\n        } else {\r\n            this.Pokedex.getPokemonByName(name.toLowerCase())\r\n                .then((response: Object) => {\r\n                    this.setState({ team: [...this.state.team, parsePoke(response)] });\r\n                    this.editPoke(name);\r\n                }).catch((response: Object) => {\r\n                    this.setState( { validSearch: false });\r\n                });\r\n        }\r\n    }\r\n\r\n    deletePoke = (name: string) => {\r\n        this.setState({ team: [...this.state.team.filter((poke: PokemonData) => poke.name !== name)]});\r\n    }\r\n\r\n    editPoke = (name: string) => {\r\n        this.setState({ editing: name.toLowerCase() });\r\n    }\r\n\r\n    movePoke = (name: string, direction: number) => {\r\n        const index = this.state.team.findIndex((poke: PokemonData) => poke.name === name);\r\n        // Shift backwards\r\n        if (direction === -1 && index > 0) {\r\n            this.setState( {\r\n                team: swapElements(this.state.team, index, index-1)\r\n            });\r\n        // Shift forwards\r\n        } else if (direction === 1 && index < this.state.team.length-1) {\r\n            this.setState( {\r\n                team: swapElements(this.state.team, index, index+1)\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShiny = (name: string) => {\r\n        const index = this.state.team.findIndex((poke: PokemonData) => poke.name === name);\r\n        let pokemon = this.state.team[index] as PokemonData;\r\n\r\n        pokemon.sprites.active = (pokemon.sprites.active === pokemon.sprites.regular)\r\n            ? pokemon.sprites.shiny\r\n            : pokemon.sprites.regular;\r\n\r\n        // Needs changing, will mess up order if editing < nth member, inefficient\r\n        // immutability-helper\r\n        this.setState({\r\n            team: [...this.state.team.filter((poke: PokemonData) => poke.name !== name), pokemon]\r\n        });\r\n    }\r\n\r\n    validateAbility = (poke: PokemonData) => {\r\n        // extend to nature and item\r\n        let valid = false;\r\n        this.Pokedex.getPokemonByName((poke.name as string).toLowerCase())\r\n            .then((response: any) => {\r\n                const abilities = response.abilities.map((ability: any) => ability['ability']['name']);\r\n                const ability = poke.ability.toLowerCase().replace(' ', '-');\r\n                valid = abilities.includes(ability);\r\n            });\r\n        return valid;\r\n    }\r\n\r\n    releasePoke = (e: React.FormEvent<HTMLFormElement>, name: string) => {\r\n        e.preventDefault();\r\n        this.deletePoke(name);\r\n    }\r\n\r\n    capturePoke = (e: React.FormEvent<HTMLFormElement>, name: string, edits: any) => {\r\n        e.preventDefault();\r\n\r\n        const index = this.state.team.findIndex((poke: PokemonData) => poke.name === name);\r\n        let pokemon = this.state.team[index] as PokemonData;\r\n        \r\n        const valid = this.validateAbility(pokemon) as boolean;\r\n        if (!valid) {\r\n            // shake invalid comp and return\r\n        }\r\n\r\n        this.setState({ editing: '' });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"center\">\r\n                <Search query={this.state.query}\r\n                    validSearch={this.state.validSearch}\r\n                    searchPoke={this.addPoke}\r\n                    onSubmit={this.encounterPoke}\r\n                    onChange={this.onType}\r\n                />\r\n                {/* Render minimized representations first */}\r\n                <div>\r\n                    { this.state.team.map((poke: PokemonData) => (\r\n                        poke.name !== this.state.editing &&\r\n                            <Pokemon\r\n                                key={poke.name as string}\r\n                                poke={poke}\r\n                                editing={poke.name === this.state.editing}\r\n                                movePoke={this.movePoke}\r\n                                editPoke={this.editPoke}\r\n                                deletePoke={this.deletePoke}\r\n                                toggleShiny={this.toggleShiny}\r\n                                releasePoke={this.releasePoke}\r\n                                capturePoke={this.capturePoke}\r\n                                onChange={this.onTypeID}\r\n                            />\r\n                    ))}\r\n                </div>\r\n                {/* Render the Pokemon being unedited at bottom */}\r\n                <div>\r\n                    { this.state.team.map((poke: PokemonData) => (\r\n                        poke.name === this.state.editing &&\r\n                            <Pokemon\r\n                                key={poke.name as string}\r\n                                poke={poke}\r\n                                editing={poke.name === this.state.editing}\r\n                                movePoke={this.movePoke}\r\n                                editPoke={this.editPoke}\r\n                                deletePoke={this.deletePoke}\r\n                                toggleShiny={this.toggleShiny}\r\n                                releasePoke={this.releasePoke}\r\n                                capturePoke={this.capturePoke}\r\n                                onChange={this.onTypeID}\r\n                            />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction parsePoke(response: any) {\r\n    const types = response.types.map((type: any) => type['type']['name']);\r\n    \r\n    return {\r\n        name: response.name,\r\n        sprites: {\r\n            regular: response.sprites.front_default,\r\n            shiny: response.sprites.front_shiny,\r\n            active: response.sprites.front_default\r\n        },\r\n        types,\r\n        moves: ['', '', '', ''],\r\n        ability: '',\r\n        nature: '',\r\n        item: '',\r\n        stats: {\r\n            HP: response.stats[0].base_stat,\r\n            Atk: response.stats[1].base_stat,\r\n            Def: response.stats[2].base_stat,\r\n            SpA: response.stats[3].base_stat,\r\n            SpD: response.stats[4].base_stat,\r\n            Spe: response.stats[5].base_stat,\r\n        }\r\n    }\r\n}\r\n\r\nfunction swapElements(arr: Array<any>, e1: number, e2: number){\r\n    const tmp = arr[e1];\r\n    arr[e1] = arr[e2];\r\n    arr[e2] = tmp;\r\n    return arr;\r\n}\r\n\r\nexport default Team","import React, { Component } from 'react';\r\nimport Header from './components/layout/Header';\r\nimport Team from './components/Team'\r\nimport './css/normalize.css';\r\nimport './css/style.css';\r\n\r\nclass App extends Component {\r\n\trender () {\r\n        return (\r\n            <div className=\"app\">\r\n                <Header />\r\n                <Team />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}