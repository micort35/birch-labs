{"version":3,"sources":["components/layout/Header.tsx","components/layout/Search.tsx","components/layout/ListItem.tsx","components/Pokemon.tsx","components/Team.tsx","App.tsx","index.tsx"],"names":["Header","className","Search","onSubmit","e","props","type","name","this","validSearch","placeholder","value","query","onChange","Component","gen_id","Math","random","toString","substr","ListItem","items","map","item","i","key","classifier","Pokemon","state","move1","move2","move3","move4","ability","nature","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","Object","values","poke","stats","options","scales","xAxes","display","ticks","suggestedMin","min","onType","setState","currentTarget","editing","src","sprites","active","alt","onClick","toggleShiny","types","typify","moves","deletePoke","capturePoke","movePoke","editPoke","parsePoke","response","regular","front_default","shiny","front_shiny","HP","base_stat","Atk","Def","SpA","SpD","Spe","swapElements","arr","e1","e2","tmp","Team","team","Pokedex","encounterPoke","preventDefault","addPoke","length","includes","getPokemonByName","toLowerCase","then","catch","filter","direction","index","findIndex","pokemon","sprite","validateAbility","valid","abilities","replace","edits","searchPoke","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cf776dc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"banner raisin-bg text-center w-100\">\r\n            <h1>Birch Labs</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react';\r\n\r\ninterface SearchProps {\r\n    query: string,\r\n    validSearch: boolean,\r\n    searchPoke: Function,\r\n    onSubmit: Function,\r\n    onChange: Function\r\n}\r\n\r\nclass Search extends Component<SearchProps> {\r\n    render () { \r\n        return (\r\n            <form onSubmit={(e) => this.props.onSubmit(e)}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"query\"\r\n                    className={\"search box-rounded white-bg center text-center block w-25 mb-1\" + (this.props.validSearch ? \"\" : \" error\")} \r\n                    placeholder=\"Enter a PokÃ©mon\"\r\n                    value={this.props.query}\r\n                    onChange={(e) => this.props.onChange(e)}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"box-rounded box-md crimson-l-bg center text-center block w-15 mb-1\">\r\n                    Encounter!\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import React from 'react';\r\n\r\nfunction ListItem(props: any) {\r\n    return (\r\n        <ul>\r\n            {props.items.map((item: string, i: number) =>\r\n                <li key={gen_id()} className={props.classifier(item)}>{item}</li>\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst gen_id = () => Math.random().toString(36).substr(2, 9);\r\n\r\nexport default ListItem","import React, { Component } from \"react\";\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport { PokemonData } from \"../types/types\";\r\nimport ListItem from './layout/ListItem';\r\n\r\ninterface PokemonTypes {\r\n    poke: PokemonData,\r\n    editing: boolean,\r\n    movePoke: Function,\r\n    editPoke: Function,\r\n    deletePoke: Function,\r\n    toggleShiny: Function,\r\n    capturePoke: Function,\r\n}\r\n\r\nclass Pokemon extends Component<PokemonTypes> {\r\n    state = {\r\n        move1: '',\r\n        move2: '',\r\n        move3: '',\r\n        move4: '',\r\n        ability: '',\r\n        nature: '',\r\n        item: '',\r\n    }\r\n\r\n    readonly data = {\r\n        labels: ['HP', 'Atk', 'Def', 'SpA', 'SpD', 'Spe'],\r\n        datasets: [\r\n          {\r\n            label: 'Base Stats',\r\n            backgroundColor: 'rgba(255,99,132,0.2)',\r\n            borderColor: 'rgba(255,99,132,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n            hoverBorderColor: 'rgba(255,99,132,1)',\r\n            data: Object.values(this.props.poke.stats)\r\n          }\r\n        ]\r\n    };\r\n\r\n    readonly options = {\r\n        scales: {\r\n            xAxes: [{\r\n                display: true,\r\n                ticks: {\r\n                    suggestedMin: Math.min(...this.data.datasets[0].data) - 5\r\n                }\r\n            }]\r\n        }\r\n    }\r\n\r\n    onType = (e: React.ChangeEvent<HTMLInputElement>) => this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                this.props.editing ? (\r\n                    <div className=\"text-center\">\r\n                        <div className=\"card white-bg center flex-center w-25 mt-1 mb-1\">\r\n                            <div className=\"card-poke text-center\">\r\n                                <p className=\"p-name i-block cap\">{this.props.poke.name}</p>\r\n                                <img src={this.props.poke.sprites.active} alt=\"PokÃ©mon's sprite\" className=\"sprite\" onClick={() => this.props.toggleShiny(this.props.poke.name)} />\r\n                                <ListItem items={this.props.poke.types} classifier={typify} />\r\n                            </div>\r\n                            <div className=\"card-moves\">\r\n                                <input type=\"text\" name=\"move1\" placeholder=\"Move 1\" className=\"box-rounded box-md text-center w-95 mt-05\" value={this.props.poke.moves[0]} onChange={(e) => this.onType(e)} />\r\n                                <input type=\"text\" name=\"move2\" placeholder=\"Move 2\" className=\"box-rounded box-md text-center w-95 mt-05\" value={this.props.poke.moves[1]} onChange={(e) => this.onType(e)} />\r\n                                <input type=\"text\" name=\"move3\" placeholder=\"Move 3\" className=\"box-rounded box-md text-center w-95 mt-05\" value={this.props.poke.moves[2]} onChange={(e) => this.onType(e)} />\r\n                                <input type=\"text\" name=\"move4\" placeholder=\"Move 4\" className=\"box-rounded box-md text-center w-95 mt-05\" value={this.props.poke.moves[3]} onChange={(e) => this.onType(e)} />\r\n                            </div>\r\n                            <div className=\"card-modifiers flex-center\">\r\n                                <input type=\"text\" name=\"ability\" placeholder=\"Ability\" className=\"box-rounded box-md text-center w-30 mx-025\" value={this.props.poke.ability} onChange={(e) => this.onType(e)} />\r\n                                <input type=\"text\" name=\"nature\" placeholder=\"Nature\" className=\"box-rounded box-md text-center w-30 mx-025\" value={this.props.poke.nature} onChange={(e) => this.onType(e)} />\r\n                                <input type=\"text\" name=\"item\" placeholder=\"Item\" className=\"box-rounded box-md text-center w-30 mx-025\" value={this.props.poke.item} onChange={(e) => this.onType(e)} />\r\n                            </div>\r\n                            <div className=\"card-stats\">\r\n                                <HorizontalBar data={this.data} options={this.options} />\r\n                            </div>\r\n                        </div>\r\n                        <form className=\"i-block w-10 mx-1 mb-1\" onSubmit={() => this.props.deletePoke(this.props.poke.name)}>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"box-rounded box-md negative-bg w-100\">\r\n                                Release\r\n                            </button>\r\n                        </form>\r\n                        <form className=\"i-block w-10 mx-1 mb-1\" onSubmit={() => this.props.capturePoke(this.props.poke.name, this.state)}>\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"box-rounded box-md grass-bg w-100\">\r\n                                Capture!\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"center flex-center w-25 separator\">\r\n                        <img src={this.props.poke.sprites.active} alt=\"PokÃ©mon's sprite\" className=\"sprite\"/>\r\n                        <p className=\"poke-name i-block text-center cap\">{this.props.poke.name}</p>\r\n                        <form className=\"flex-center\">\r\n                            <div className=\"poke-move i-block\">\r\n                                <button type=\"button\" onClick={() => this.props.movePoke(this.props.poke.name, -1)}>\r\n                                    <i className=\"material-icons\">arrow_drop_up</i>\r\n                                </button>\r\n                                <button type=\"button\" onClick={() => this.props.movePoke(this.props.poke.name, 1)}>\r\n                                    <i className=\"material-icons\">arrow_drop_down</i>\r\n                                </button>\r\n                            </div>\r\n                            <button type=\"button\" onClick={() => this.props.editPoke(this.props.poke.name)}>\r\n                                <i className=\"material-icons\">edit</i>\r\n                            </button>\r\n                            <button type=\"button\" onClick={() => this.props.deletePoke(this.props.poke.name)}>\r\n                                <i className=\"material-icons\">delete</i>\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </> \r\n        )\r\n    }\r\n}\r\n\r\nconst typify = (type: string) => 'box-rounded box-md i-block w-45 mx-025 font-sm upper ' + type\r\n\r\nexport default Pokemon","import React, { Component } from 'react';\r\nimport { Pokedex } from 'pokeapi-js-wrapper';\r\nimport { PokemonData } from '../types/types';\r\nimport Search from './layout/Search';\r\nimport Pokemon from './Pokemon';\r\n\r\nclass Team extends Component {\r\n    state = {\r\n        query: '',\r\n        validSearch: true,\r\n        team: [],\r\n        editing: ''\r\n    }\r\n\r\n    onType = (e: React.ChangeEvent<HTMLInputElement>) => this.setState({ [e.currentTarget.name]: e.currentTarget.value });\r\n\r\n    // Create PokeAPI client\r\n    readonly Pokedex = new Pokedex();\r\n\r\n    encounterPoke = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        this.addPoke(this.state.query);\r\n        this.setState({ query: '' });\r\n    }\r\n\r\n    addPoke = (name: string) => {\r\n        // Check for team max and duplicates\r\n        if (this.state.team.length === 6 || this.state.team.map((poke: PokemonData) => poke.name).includes(name)){\r\n            this.setState({ validSearch: false });\r\n        } else {\r\n            this.Pokedex.getPokemonByName(name.toLowerCase())\r\n                .then((response: Object) => {\r\n                    this.setState({ team: [...this.state.team, parsePoke(response)] });\r\n                    this.editPoke(name);\r\n                }).catch((response: Object) => {\r\n                    this.setState( { validSearch: false });\r\n                });\r\n        }\r\n    }\r\n\r\n    deletePoke = (name: string) => {\r\n        this.setState({ team: [...this.state.team.filter((poke: PokemonData) => poke.name !== name)]});\r\n    }\r\n\r\n    editPoke = (name: string) => {\r\n        this.setState({ editing: name.toLowerCase() });\r\n    }\r\n\r\n    movePoke = (name: string, direction: number) => {\r\n        const index = this.state.team.findIndex((poke: PokemonData) => poke.name === name);\r\n        // Shift backwards\r\n        if (direction === -1 && index > 0) {\r\n            this.setState( {\r\n                team: swapElements(this.state.team, index, index-1)\r\n            });\r\n        // Shift forwards\r\n        } else if (direction === 1 && index < this.state.team.length-1) {\r\n            this.setState( {\r\n                team: swapElements(this.state.team, index, index+1)\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleShiny = (name: string) => {\r\n        const index = this.state.team.findIndex((poke: PokemonData) => poke.name === name);\r\n        let pokemon = this.state.team[index] as PokemonData;\r\n\r\n        let sprite = '';\r\n        if (pokemon.sprites.active === pokemon.sprites.regular) {\r\n            sprite = pokemon.sprites.shiny;\r\n        } else {\r\n            sprite = pokemon.sprites.regular;\r\n        }\r\n        pokemon.sprites.active = sprite;\r\n\r\n        // Needs changing, will mess up order if editing < nth member, inefficient\r\n        // immutability-helper\r\n        this.setState({\r\n            team: [...this.state.team.filter((poke: PokemonData) => poke.name !== name), pokemon]\r\n        });\r\n    }\r\n\r\n    validateAbility = (poke: PokemonData) => {\r\n        let valid = false;\r\n        this.Pokedex.getPokemonByName(poke.name.toLowerCase())\r\n            .then((response: any) => {\r\n                const abilities = response.abilities.map((ability: any) => ability['ability']['name']);\r\n                const ability = poke.ability.toLowerCase().replace(' ', '-');\r\n                valid = abilities.includes(ability);\r\n            });\r\n        return valid;\r\n    }\r\n\r\n    capturePoke = (name: string, edits: any) => {\r\n        // this too\r\n        // Needs changing, will mess up order if editing < nth member, inefficient\r\n        // immutability-helper\r\n        const index = this.state.team.findIndex((poke: PokemonData) => poke.name === name);\r\n        let pokemon = this.state.team[index] as PokemonData;\r\n        \r\n        pokemon.moves[0] = edits.move1;\r\n        pokemon.moves[1] = edits.move2;\r\n        pokemon.moves[2] = edits.move3;\r\n        pokemon.moves[3] = edits.move4;\r\n        pokemon.ability = edits.ability;\r\n        pokemon.nature = edits.nature;\r\n        pokemon.item = edits.item;\r\n\r\n        const valid = this.validateAbility(pokemon) as boolean;\r\n        if (!valid) {\r\n            // shake the ability comp\r\n        }\r\n\r\n        this.setState({\r\n            team: [...this.state.team.filter((poke: PokemonData) => poke.name !== name), pokemon],\r\n            editing: ''\r\n        });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"center\">\r\n                <Search query={this.state.query}\r\n                    validSearch={this.state.validSearch}\r\n                    searchPoke={this.addPoke}\r\n                    onSubmit={this.encounterPoke}\r\n                    onChange={this.onType}\r\n                />\r\n                {/* Render minimized representations first */}\r\n                <div>\r\n                    { this.state.team.map((poke: PokemonData) => (\r\n                        poke.name !== this.state.editing &&\r\n                            <Pokemon\r\n                                key={poke.name}\r\n                                poke={poke}\r\n                                editing={poke.name === this.state.editing}\r\n                                movePoke={this.movePoke}\r\n                                editPoke={this.editPoke}\r\n                                deletePoke={this.deletePoke}\r\n                                toggleShiny={this.toggleShiny}\r\n                                capturePoke={this.capturePoke}\r\n                            />\r\n                    ))}\r\n                </div>\r\n                {/* Render the Pokemon being unedited at bottom */}\r\n                <div>\r\n                    { this.state.team.map((poke: PokemonData) => (\r\n                        poke.name === this.state.editing &&\r\n                            <Pokemon\r\n                                key={poke.name}\r\n                                poke={poke}\r\n                                editing={poke.name === this.state.editing}\r\n                                movePoke={this.movePoke}\r\n                                editPoke={this.editPoke}\r\n                                deletePoke={this.deletePoke}\r\n                                toggleShiny={this.toggleShiny}\r\n                                capturePoke={this.capturePoke}\r\n                            />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction parsePoke(response: any) {\r\n    const types = response.types.map((type: any) => type['type']['name']);\r\n    \r\n    return {\r\n        name: response.name,\r\n        sprites: {\r\n            regular: response.sprites.front_default,\r\n            shiny: response.sprites.front_shiny,\r\n            active: response.sprites.front_default\r\n        },\r\n        types,\r\n        moves: [],\r\n        ability: '',\r\n        nature: '',\r\n        item: '',\r\n        stats: {\r\n            HP: response.stats[0].base_stat,\r\n            Atk: response.stats[1].base_stat,\r\n            Def: response.stats[2].base_stat,\r\n            SpA: response.stats[3].base_stat,\r\n            SpD: response.stats[4].base_stat,\r\n            Spe: response.stats[5].base_stat,\r\n        }\r\n    }\r\n}\r\n\r\nfunction swapElements(arr: Array<any>, e1: number, e2: number){\r\n    const tmp = arr[e1];\r\n    arr[e1] = arr[e2];\r\n    arr[e2] = tmp;\r\n    return arr;\r\n}\r\n\r\nexport default Team","import React, { Component } from 'react';\r\nimport Header from './components/layout/Header';\r\nimport Team from './components/Team'\r\nimport './css/normalize.css';\r\nimport './css/style.css';\r\n\r\nclass App extends Component {\r\n\trender () {\r\n        return (\r\n            <div className=\"app\">\r\n                <Header />\r\n                <Team />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}